====================================================================
在庫管理システム - ハードコートExcel読込画面 詳細設計書（改訂版）
====================================================================

■ 1. 画面概要
====================================================================
【画面名】
　指図書読込画面

【画面目的】
　ハードコート加工完了データのExcelファイルを読み込み、
　加工完了在庫をシステムに登録し、関連する出荷データの状態を更新する業務機能を提供する。

【アクセス情報】
　- URL: /hardcoat_read_excel（初期表示）
　- URL: /hardcoat_read_excel/import（Excel取込実行）
　- 認証: 必須（ログイン後のみアクセス可能）

【業務上の重要性】
　- 加工工場からの完了報告受付の入口
　- ハードコート在庫の正確な管理と更新
　- 加工指図と完了実績の整合性確保

■ 2. 業務概要
====================================================================
【主要業務】
　1. 加工工場からのExcel形式完了報告の受付・解析
　2. 製品仕様からの製品ID逆引き処理
　3. ハードコート加工完了在庫としてデータベース登録
　4. 関連する加工指図データの状態更新

【対象データ】
　- ハードコート加工完了データのみ（BPDD_PROC = DatabaseConstants.PROC_HARD_COAT）
　- 有効データとして登録（BPDD_FLG = DatabaseConstants.BPDD_FLG_NOT_SHIPPED）
　- コート日付入りの完了在庫

【業務フロー連携】
　- 加工指示書画面からの加工指図（BSHK_TO = DatabaseConstants.SHIPMENT_TO_PROCESS）
　- ハードコート在庫検索での完了在庫確認
　- 出荷作成でのハードコート在庫出荷

■ 3. 画面レイアウト
====================================================================
【3.1 画面構成】
```
┌─────────────────────────────────────────────────────────┐
│                    指図書読込                          │
├─────────────────────────────────────────────────────────┤
│ [エラー・成功メッセージエリア]                         │
├─────────────────────────────────────────────────────────┤
│ ファイル選択                                           │
│ ┌─────────────────┐                                   │
│ │ ファイルを選択  │ [参照]  [取り込み]              │
│ └─────────────────┘                                   │
└─────────────────────────────────────────────────────────┘
```

【3.2 入力項目詳細】

◆ ファイル選択
　- 必須項目
　- 受け入れ形式: .xlsx、.xls、.csv拡張子のファイル
　- ファイル形式: Excel形式（推奨）またはCSV形式

■ 4. Excelファイル仕様
====================================================================
【4.1 ファイル形式要件】

◆ 基本要件
　- ファイル拡張子: .xlsx、.xls
　- シート構成: 複数シート対応（「原紙」シートは除外）
　- データ開始行: 5行目から
　- 空ファイルチェック対応

【4.2 必須データ列定義】

◆ Excelファイル列構成
```
列  項目名      データ型    用途                     備考
─────────────────────────────────────────────────────────
B   ベース      数値        製品ID逆引き用          レンズベースカーブ値
C   加入度数    数値        製品ID逆引き用          遠近両用度数
D   L/R        文字列      製品ID逆引き用          左右識別（L/R）
E   色          文字列      製品ID逆引き用          レンズ色（BR、SG等）
G   コート日    日付        加工完了日             YYYY/MM/DD形式または日付型
T   数量        数値        加工完了数量            0より大きい値のみ処理
U   ロット      文字列      製造ロット番号          文字列として扱う
V   BSHK_ID    数値        出荷データID            出荷データ更新用（0の場合は更新なし）
```

【4.3 データ抽出ルール】

◆ 製品ID逆引き処理
　- 逆引き条件: ベース + 加入度数 + L/R + 色の組み合わせ
　- 参照先: BF規格マスタ（BFSP_MST）
　- 検索方式: メモリキャッシュによる高速検索
　- キー生成: (BFSP_BASE, BFSP_ADP, BFSP_LR, BFSP_CLR)のタプル
　- エラー処理: 該当なしの場合はスキップ・エラーメッセージ表示

◆ コート日変換処理
　- 入力形式: YYYY/MM/DD（文字列または日付型）
　- 出力形式: YYMMDD（6桁数値）
　- 変換例: 2024/01/15 → 240115
　- 文字列の場合: datetime.strptime(coat_date, '%Y/%m/%d')
　- 日付型の場合: そのまま使用

◆ ロット処理
　- 数値型の場合: str()で文字列に変換
　- 文字列型の場合: そのまま使用
　- データベース格納: VARCHAR型として保存

■ 5. 業務ルール
====================================================================
【5.1 データ検証ルール】

◆ ファイルレベル検証
　- ファイル存在チェック: 必須
　- ファイル形式チェック: .xlsx、.xls拡張子のみ受付
　- ファイルサイズチェック: 空ファイル除外

◆ シートレベル検証
　- 「原紙」シート除外: 業務データ対象外
　- データ存在チェック: A列に値がある行のみ処理
　- 5行目開始ルール: ヘッダー行を考慮した業務仕様

◆ 行レベル検証
　- 製品ID逆引き成功: BF規格マスタに存在する組み合わせのみ
　- 数量条件: 0より大きい値のみ処理対象
　- 重複チェック: 同一製品ID+LOTの既存データ確認
　- コート日必須チェック: コート日が入力されていない場合はエラー

【5.2 重複チェックルール】

◆ 一意性制約確認
　- 対象: ハードコート加工済みデータ（BPDD_PROC = DatabaseConstants.PROC_HARD_COAT AND BPDD_FLG = DatabaseConstants.BPDD_FLG_NOT_SHIPPED）
　- チェック項目: 製品ID + LOT の組み合わせ
　- 重複時処理: 該当行をスキップ・エラーメッセージ表示
　- 目的: データ重複による業務混乱防止

【5.3 データ統合ルール】

◆ 製造データ登録ルール
　- 登録テーブル: BPRD_DAT（製造データ）
　- 加工区分設定: BPDD_PROC = DatabaseConstants.PROC_HARD_COAT
　- 状態設定: BPDD_FLG = DatabaseConstants.BPDD_FLG_NOT_SHIPPED
　- コート日設定: BPDD_CRT（YYMMDD形式）

◆ 出荷データ状態更新ルール
　- 対象: BSHK_IDが0以外の場合のみ
　- 更新条件: BSHK_FLG = DatabaseConstants.BSHK_FLG_NOT_SHIPPED
　- 更新内容: BSHK_FLG = DatabaseConstants.BSHK_FLG_PROCESSED
　- 目的: 加工指図と完了実績の紐付け・状態管理
　- 処理方式: 一件ずつの個別更新

■ 6. 処理フロー
====================================================================
【6.1 メイン処理フロー】
```
1. 指図書読込画面アクセス（/hardcoat_read_excel）
　　↓
2. 認証チェック（ログイン必須）
　　↓
3. GET方式：ファイル選択フォーム表示
　　POST方式：Excel取込処理実行
　　↓
4. ファイル形式・サイズ・拡張子チェック
　　├─ 拡張子チェック: .xlsx、.xls
　　├─ ファイル名チェック: 空文字列でない
　　└─ ファイルサイズチェック: 0でない
　　↓
5. 一時ファイル保存・import_excel_hardcoat()関数実行
　　↓
6. 製品マスタ・既存ロットデータの一括メモリキャッシュ
　　↓
7. 各シート順次処理（「原紙」シート除外）
　　↓
8. データ抽出・検証・重複チェック・一括登録
　　↓
9. 関連出荷データ状態更新（BSHK_FLG = DatabaseConstants.BSHK_FLG_PROCESSED）
　　↓
10. 成功メッセージ表示・ハードコート在庫検索画面に遷移
```

【6.2 Excel解析処理フロー】
```
1. Excelファイル読み込み（openpyxlライブラリ使用）
　　├─ openpyxl.load_workbook(temp_path)
　　└─ ワークブック・シート情報取得
　　↓
2. 製品マスタデータ一括取得・メモリキャッシュ化
　　├─ BFSP_MST全件取得
　　└─ (ベース, 加入度数, L/R, 色) → 製品ID マッピング作成
　　↓
3. 既存ハードコートロットデータ一括取得
　　├─ BPRD_DAT（BPDD_PROC=DatabaseConstants.PROC_HARD_COAT, BPDD_FLG=DatabaseConstants.BPDD_FLG_NOT_SHIPPED）取得
　　└─ (製品ID, LOT)重複チェック用セット作成
　　↓
4. 各シート処理（「原紙」除外）
　　├─ sheet_name == '原紙'の場合はcontinue
　　├─ 5行目から順次データ抽出（A列に値がある行まで）
　　├─ B,C,D,E列から製品ID逆引き
　　├─ G列コート日変換・T列数量・U列ロット・V列BSHK_ID取得
　　└─ 重複チェック・データ蓄積
　　↓
5. シートごと一括データベース処理
　　├─ BPRD_DAT　INSERT
　　└─ BSHK_DAT　UPDATE（BSHK_FLG=DatabaseConstants.BSHK_FLG_PROCESSED）
```

【6.3 データ登録処理フロー】
```
1. 製造データ（BPRD_DAT）一括登録
　　├─ 製品ID（逆引き結果）
　　├─ LOT（文字列）
　　├─ 数量（T列値）
　　├─ コート日（YYMMDD変換値）
　　├─ 加工区分（DatabaseConstants.PROC_HARD_COAT）
　　└─ フラグ（DatabaseConstants.BPDD_FLG_NOT_SHIPPED）
　　↓
2. 出荷データ（BSHK_DAT）状態個別更新
　　├─ 対象：BSHK_IDが0以外かつBSHK_FLG=DatabaseConstants.BSHK_FLG_NOT_SHIPPED
　　├─ 更新：BSHK_FLG=DatabaseConstants.BSHK_FLG_PROCESSED
　　└─ 方式：一件ずつのUPDATE文実行
　　↓
3. トランザクションコミット・結果通知
　　├─ session.commit()
　　└─ 成功時: ハードコート在庫検索画面へリダイレクト
```

■ 7. 処理結果仕様
====================================================================
【7.1 成功時の処理】

◆ 正常完了メッセージ
　- 表示内容: 「ファイルのインポートが完了しました」
　- メッセージ種別: success（緑色表示）
　- 遷移先: ハードコート在庫検索画面（/hardcoat_stock_search）

【7.2 エラー時の処理】

◆ ファイルレベルエラー
　- ファイル未選択: 「ファイルが選択されていません」
　- 不正拡張子: 「Excelファイルを選択してください」
　- 空ファイル: 「ファイルが空です」

◆ データレベルエラー
　- 製品ID逆引き失敗: 「製品IDが見つかりません: ベース=X, 加入度数=Y, L/R=Z, 色=W」
　- 重複データエラー: 「一意制約違反: 製品ID=X, ロット=Yのデータが既に存在します」
　- コート日未入力: 「コート日が入力されていません: ロット=X, ベース=Y, 加入度数=Z, L/R=W, 色=V」

◆ システムエラー
　- 処理中断: Excel取込処理エラーメッセージ表示
　- ロールバック: データベース整合性保持

■ 8. 関連ファイル・関数
====================================================================
【8.1 ルーティング関数】
　- app/routes.py: hardcoat_read_excel()
　  * 初期画面表示制御
　  * フォーム初期化・認証チェック
　  * GETリクエスト処理
　- app/routes.py: hardcoat_read_excel_import()
　  * Excel取込処理制御
　  * ファイルアップロード・バリデーション
　  * エラーハンドリング・結果表示
　  * POSTリクエスト処理

【8.2 データ処理関数】
　- app/import_excel.py: import_excel_hardcoat()
　  * Excel解析・データ抽出・登録のメイン処理
　  * 製品マスタキャッシュ・重複チェック
　  * 一括データベース処理・トランザクション制御
　  * openpyxlライブラリによるExcel読み込み

【8.3 フォーム・テンプレート】
　- app/forms.py: HardcoatStockForm
　  * WTFormsフォーム定義
　  * CSRF保護機能
　- app/templates/hardcoat_read_excel.html
　  * 指図書読込画面のテンプレート
　  * ファイル選択フォーム・メッセージ表示

【8.4 データベーステーブル】
　- BPRD_DAT: 製造データテーブル
　  * 主要項目: BPDD_ID（製造ID）、BPDD_PRD_ID（製品ID）、BPDD_LOT（LOT）、BPDD_QTY（数量）、BPDD_CRT（コート日）、BPDD_PROC（加工ID）、BPDD_FLG（フラグ）
　  * 業務用途: ハードコート加工完了在庫の管理
　- BFSP_MST: BF規格マスタテーブル
　  * 主要項目: BFSP_PRD_ID（製品ID）、BFSP_BASE（ベース）、BFSP_ADP（加入度数）、BFSP_LR（L/R）、BFSP_CLR（色）
　  * 業務用途: 製品ID逆引き・製品仕様管理
　- BSHK_DAT: 出荷データテーブル
　  * 主要項目: BSHK_ID（出荷ID）、BSHK_TO（出荷先ID）、BSHK_PDD_ID（製造ID）、BSHK_FLG（フラグ）
　  * 業務用途: 加工指図と完了実績の紐付け管理
　  * フラグ値: DatabaseConstants.BSHK_FLG_NOT_SHIPPED=未出荷、DatabaseConstants.BSHK_FLG_PROCESSED=ハードコート完了

【8.5 重要な業務関数】
　- get_db_session(): データベースセッション管理
　- log_error(): 統一エラーログ記録
　- トランザクション制御: session.commit()・session.rollback()処理

【8.6 定数・設定】
　- DatabaseConstants.PROC_HARD_COAT: ハードコート加工区分
　- DatabaseConstants.BPDD_FLG_NOT_SHIPPED: 製造データ有効フラグ
　- DatabaseConstants.SHIPMENT_TO_PROCESS: 加工宛出荷先ID
　- DatabaseConstants.BSHK_FLG_NOT_SHIPPED: 出荷データ未出荷フラグ
　- DatabaseConstants.BSHK_FLG_PROCESSED: 出荷データ加工完了フラグ
　- ExcelConstants.COLUMN_*: Excel列定義定数

【8.7 関連画面・機能】
　- 加工指示書画面: 加工指図データの出力
　- ハードコート在庫検索画面: 取込データの在庫確認
　- ハードコート出荷作成画面: 完了在庫の出荷処理

■ 9. 業務上の重要ポイント
====================================================================
【9.1 加工業務フロー連携】
　- 加工指示書 → 加工工場作業 → 指図書読込 → 在庫管理
　- 加工指図（BSHK_TO=DatabaseConstants.SHIPMENT_TO_PROCESS）と完了実績（BPDD_PROC=DatabaseConstants.PROC_HARD_COAT）の整合性確保
　- 出荷データ状態管理による進捗追跡

【9.2 データ品質管理】
　- 製品ID逆引きによる製品仕様の正確性確保
　- 重複チェックによるデータ整合性維持
　- 一括処理による処理効率と一貫性の両立
　- ロット番号の文字列変換による型整合性確保

【9.3 業務運用上の注意点】
　- Excelファイルの列構成は標準フォーマット準拠が必須
　- 「原紙」シート除外ルールの理解と遵守
　- 加工工場との連携における正確な完了報告の重要性
　- BSHK_IDによる出荷データ連携の適切な管理

【9.4 システム保守・運用】
　- ファイルアップロード時のサイズ・形式制限
　- 一時ファイルの自動削除による領域管理
　- 大量データ処理時のパフォーマンス考慮
　- メモリキャッシュによる処理効率化
