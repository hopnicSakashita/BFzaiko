====================================================================
在庫管理システム - 在庫数量計算関数（Get_Zaiko_Qty_BF）詳細設計書（改訂版）
====================================================================

■ 1. 画面概要
====================================================================
【機能名】
　在庫数量計算関数（Get_Zaiko_Qty_BF）

【機能ID】
　FUNCTION_ZAIKO_QTY

【アクセス権限】
　- 対象: システム内部関数（直接アクセス不可）
　- 認証: 各機能画面の認証に依存
　- 権限: データベース関数として自動実行

【機能の位置づけ】
　在庫管理システムの核心的な在庫計算機能。製造から出荷までの
　数量管理において、正確な在庫数量把握に不可欠な計算処理を担う。

■ 2. 業務概要
====================================================================
【業務目的】
　1. 製造数量から出荷済み数量を差し引いた正確な在庫数量算出
　2. リアルタイム在庫状況の把握による適切な在庫管理
　3. 出荷可能数量の即座判定による出荷計画効率化
　4. 在庫検索画面での実在庫数量表示
　5. 製造計画・調達計画の基礎データ提供

【主要業務機能】
　1. 在庫数量計算：製造数量 - 累計出荷数量
　2. 在庫状況判定：在庫有無・出荷可能性の即座判定
　3. 出荷超過検知：負値による数量不整合の検出
　4. 製造ロット別管理：ロット単位での精密在庫管理
　5. 複数機能連携：各業務画面での一貫した在庫情報提供

【業務上の重要性】
　- 在庫管理業務の正確性確保
　- 出荷業務の効率化・適正化
　- 製造計画の精度向上
　- 顧客対応の迅速化
　- 在庫コスト最適化

■ 3. 処理フロー
====================================================================
【3.1 メインフロー】
　1. 製造データID指定による関数呼び出し
　　　↓
　2. 製造データ（BPRD_DAT）から製造数量取得
　　　↓
　3. 出荷データ（BSHK_DAT）から累計出荷数量取得
　　　↓
　4. 在庫数量計算（製造数量 - 累計出荷数量）
　　　↓
　5. 計算結果の返却
　　　↓
　6. 呼び出し元での在庫数量活用

【3.2 製造数量取得フロー】
　1. 製造データID（BPDD_ID）による主キー検索
　　　↓
　2. BPRD_DAT.BPDD_QTY（製造数量）取得
　　　├─ データ存在 → 製造数量を変数格納
　　　└─ データ無し → NULL値処理

【3.3 出荷数量合計取得フロー】
　1. 製造データID（BSHK_PDD_ID）による関連出荷データ検索
　　　↓
　2. BSHK_DAT.BSHK_QTY の SUM集計実行
　　　├─ 出荷データ存在 → 合計数量算出
　　　├─ 出荷データ無し → 0として処理
　　　└─ NULL値 → ISNULL関数で0変換

【3.4 在庫数量計算フロー】
　1. 基本計算：製造数量 - 累計出荷数量
　　　↓
　2. 計算結果判定
　　　├─ 正値 → 在庫あり（出荷可能）
　　　├─ 0 → 在庫なし（出荷不可）
　　　└─ 負値 → 出荷超過（データ不整合警告）
　　　　　　↓
　3. 業務ルール適用・結果返却

■ 4. 画面レイアウト
====================================================================
【4.1 関数使用箇所での表示例】

◆ ノンコート在庫検索画面
　┌─────────────────────────────────┐
　│ 製造ID │ LOT  │ 製品ID │ 製造数量 │ 在庫数量 │
　├─────────────────────────────────┤
　│ 10001  │ 2401 │ A001   │ 100     │ 80      │
　│ 10002  │ 2402 │ A002   │ 200     │ 150     │
　│ 10003  │ 2403 │ A003   │ 150     │ 0       │
　└─────────────────────────────────┘

◆ ハードコート在庫検索画面
　┌─────────────────────────────────┐
　│ 製造ID │ LOT  │ 製品ID │ 在庫数量 │ 受注残 │
　├─────────────────────────────────┤
　│ 20001  │ 2401 │ B001   │ 50      │ 30     │
　│ 20002  │ 2402 │ B002   │ 100     │ 80     │
　└─────────────────────────────────┘

◆ 出荷作成画面（在庫確認）
　┌─────────────────────────────────┐
　│ 製造ID：10001  在庫数量：80個          │
　│ 出荷数量：[___] （最大80個まで）        │
　│ 残在庫予定：[計算値]個                │
　└─────────────────────────────────┘

【4.2 在庫ステータス表示】
　- 在庫あり：緑色表示（出荷可能）
　- 在庫なし：グレー表示（出荷不可）
　- 出荷超過：赤色表示（要確認・データ修正）

■ 5. データ項目
====================================================================
【5.1 入力データ】
　- 製造データID（BPDD_ID）：計算対象製造データの一意識別子
　- データソース：各機能画面からの関数呼び出し

【5.2 参照データ】

◆ 製造データ（BPRD_DAT）
　- 製造ID（BPDD_ID）：主キー
　- 製造数量（BPDD_QTY）：計算ベース数量
　- 製造LOT（BPDD_LOT）：ロット管理
　- 製品ID（BPDD_PRD_ID）：製品識別
　- 加工区分（BPDD_PROC）：ノンコート/ハードコート判定

◆ 出荷データ（BSHK_DAT）
　- 製造ID（BSHK_PDD_ID）：外部キー参照
　- 出荷数量（BSHK_QTY）：累計計算対象
　- 出荷日（BSHK_DT）：出荷実績管理
　- 出荷ステータス（BSHK_FLG）：有効データ判定

【5.3 出力データ】
　- 在庫数量：製造数量から出荷数量を差し引いた結果
　- データ型：数値（最大5桁）
　- 値の意味：正値=在庫あり、0=在庫なし、負値=超過

■ 6. 業務ルール
====================================================================
【6.1 在庫数量計算ルール】
　1. 基本計算式
　　- 在庫数量 = 製造数量 - 累計出荷数量
　　- 小数点計算は行わない（整数単位）

　2. NULL値処理ルール
　　- 製造数量NULL → 計算不可（NULL返却）
　　- 出荷数量NULL → 0として計算継続

　3. 負値許可ルール
　　- 出荷超過時も実際の在庫数量を返却
　　- 業務側で警告表示・修正処理実施

【6.2 在庫管理ルール】
　1. 製造ロット別管理
　　- LOT単位での在庫数量管理
　　- FIFO（先入先出）原則での出荷推奨

　2. 加工区分別管理
　　- ノンコート（BPDD_PROC=0）在庫管理
　　- ハードコート（BPDD_PROC=1）在庫管理

【6.3 出荷判定ルール】
　1. 出荷可能数量判定
　　- 在庫数量 > 0 → 出荷可能
　　- 0以下の場合は出荷不可警告

　2. 在庫引当ルール
　　- 在庫数量範囲内での出荷数量制限
　　- 複数出荷時の在庫競合回避

　3. 在庫不足時の対応
　　- 在庫不足警告表示
　　- 代替在庫・追加製造提案

■ 7. エラーハンドリング
====================================================================
【7.1 データエラー】
　- 存在しない製造ID：NULL返却・業務側で確認促進
　- 製造数量NULL：計算不可・データ修正要求
　- 範囲外数値：型変換エラー・入力値確認

【7.2 業務エラー】
　- 出荷超過状態：負値返却・警告表示・原因調査
　- 在庫不整合：関連データ確認・修正処理
　- 重複出荷：出荷データ見直し・重複排除

【7.3 システムエラー】
　- データベース接続エラー：一時的計算不可・再試行
　- テーブルロック：計算待機・タイムアウト処理
　- メモリ不足：大量計算制限・分割処理

【7.4 呼び出し側エラー対策】
　- NULL結果処理：ISNULL関数で0変換
　- エラー表示：「在庫情報を取得できません」メッセージ
　- 代替処理：手動確認・直接データ参照

■ 8. 関連ファイル・関数
====================================================================
【8.1 データベース関数】
　◆ 主要ファイル
　　- sql/Get_Zaiko_Qty_BF.sql：関数定義SQL
　　- dbo.Get_Zaiko_Qty_BF：データベース関数本体

　◆ 関連テーブル
　　- BPRD_DAT：製造データテーブル
　　- BSHK_DAT：出荷データテーブル

【8.2 呼び出し元ファイル・関数】
　◆ ノンコート在庫検索機能（app/models.py）
　　- PrdDat.search_noncoat_stock()：ノンコート在庫検索
　　- line 684, 696：関数呼び出し箇所

　◆ ハードコート在庫検索機能（app/models.py）
　　- PrdDat.search_hardcoat_stock()：ハードコート在庫検索
　　- line 750, 759：関数呼び出し箇所

　◆ 出荷作成機能（app/shipment.py）
　　- Shipment.get_stock_info()：在庫情報取得
　　- Shipment.save()：出荷時在庫チェック
　　- line 212, 333：在庫数量確認

【8.3 連携関数】
　◆ 関連計算関数
　　- Get_ODR_ZAN_Qty_BF：受注残数量計算関数（併用）
　　- ISNULL関数：NULL値処理（組み合わせ使用）

　◆ 業務処理関数
　　- stock_availability_check：在庫可用性チェック
　　- flash_success/error：計算結果メッセージ表示

【8.4 関数使用パターン】
　◆ 基本使用パターン
　　- ISNULL(dbo.Get_Zaiko_Qty_BF(BPDD_ID), 0) as stock_qty
　　- WHERE dbo.Get_Zaiko_Qty_BF(BPDD_ID) > 0（在庫フィルタ）

　◆ 複合使用パターン
　　- 在庫数量と受注残数量の同時表示
　　- 在庫充足率計算での使用

【8.5 設計書関連】
　◆ 機能設計書での使用記載
　　- 04_ノンコート在庫検索：stock_qty項目
　　- 08_ハードコート在庫検索：在庫数量表示
　　- 09_加工指示書：在庫確認処理
　　- 12_ハードコート出荷作成：在庫チェック

　◆ 関数仕様書
　　- 17_受注残数量計算関数：併用する計算関数
　　- データベース設計書：テーブル構造定義
