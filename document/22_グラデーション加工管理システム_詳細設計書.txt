====================================================================
在庫管理システム - グラデーション加工管理システム 詳細設計書
====================================================================

■ 1. システム概要
====================================================================
【システム名】
　グラデーション加工管理システム

【システム目的】
　レンズのグラデーション加工（1回目加工・2回目加工）の依頼から出荷までを
　一元管理し、加工状況の可視化と在庫管理の効率化を実現する。

【主要機能】
　1. コンベックス加工依頼管理（GPRR）
　2. コンベックス加工データ管理（GPRC）
　3. ニデック加工依頼管理（GSHK）
　4. ニデック加工データ管理（2回目GPRC）
　5. 最終出荷管理
　6. 加工状況マトリックス表示
　7. 最終出荷データ検索

【アクセス情報】
　- URL: /gradation/*
　- 認証: 必須（ログイン必須）

■ 2. 業務概要
====================================================================
【主要業務】
　1. コンベックス加工依頼の登録・編集・削除
　2. コンベックス加工データの登録・編集・削除
　3. ニデック加工依頼の作成・編集・削除
　4. ニデック加工データの登録・編集・削除
　5. 最終出荷データの作成
　6. 加工状況の集計・表示
　7. 最終出荷データの検索・確認

【業務フロー】
```
1. コンベックス加工依頼登録（GPRR）
　　↓
2. コンベックス加工データ管理（GPRC）
　　↓
3. ニデック加工依頼作成（GSHK）
　　↓
4. ニデック加工データ登録（2回目GPRC）
　　↓
5. 最終出荷作成
```

【業務上の重要性】
　- グラデーション加工の品質管理と進捗管理
　- 在庫数量の正確な把握と出荷計画の最適化
　- 加工不良の追跡と品質改善への活用

■ 3. データベース設計
====================================================================
【3.1 主要テーブル】

◆ GPRR_DAT（グラデ加工依頼データテーブル）
　- GPRR_ID: 依頼ID（主キー、自動採番）
　- GPRR_SPEC: 規格（区分マスタ参照）
	- GPRR_COLOR: 色（区分マスタ参照）
	- GPRR_REQ_TO: 依頼先（1: 通常加工、2: ニデック加工）
	- GPRR_REQ_DATE: 依頼日
	- GPRR_QTY: 依頼数量

◆ GPRC_DAT（グラデ加工データテーブル）
	- GPRC_ID: 加工ID（主キー、自動採番）
	- GPRC_REQ_ID: 依頼ID（GPRR_DAT参照）
	- GPRC_REQ_TO: 依頼先（1: 通常加工、2: ニデック加工）
	- GPRC_DATE: 戻り日
	- GPRC_QTY: 戻り数量
	- GPRC_RET_NG_QTY: 戻り不良数量
	- GPRC_INS_NG_QTY: 検品不良数量
	- GPRC_SHK_ID: 出荷ID（GSHK_DAT参照）
	- GPRC_PASS_QTY: 合格数量

◆ GSHK_DAT（ニデック加工依頼データテーブル）
	- GSHK_ID: 出荷ID（主キー、自動採番）
	- GSHK_STC_ID: 在庫ID（GPRC_ID参照）
	- GSHK_TO: 出荷先（2: ニデック加工依頼、3: 最終出荷）
	- GSHK_DT: 出荷日
	- GSHK_ORD_DT: 手配日
	- GSHK_QTY: 出荷数量
	- GSHK_FLG: フラグ
	- GSHK_REQ_ID: 依頼ID（GPRR_DAT参照）

◆ KBN_MST（区分マスタテーブル）
	- KBN_ID: 区分ID（主キー）
	- KBN_NO: 区分番号（主キー）
	- KBN_NM: 区分名
	- KBN_FLG: フラグ

【3.2 関連テーブル】
	- BFSP_MST: BF規格マスタ（製品情報）
	- BZTR_MST: 取引先マスタ（出荷先情報）

■ 4. 画面設計
====================================================================
【4.1 画面一覧】

◆ コンベックス加工依頼管理
	- gprr_create.html: コンベックス加工依頼作成画面
	- gprr_list.html: コンベックス依頼一覧画面
	- gprr_edit.html: コンベックス加工依頼編集画面

◆ コンベックス加工データ管理
	- gprc_create_from_gprr.html: コンベックス加工データ登録画面
	- gprc_list.html: コンベックス戻り一覧画面

◆ ニデック加工依頼管理
	- shipping_create.html: ニデック加工依頼作成画面
	- gshk_list.html: ニデック依頼一覧画面
	- gshk_edit.html: ニデック加工依頼編集画面

◆ ニデック加工データ管理
	- nidec_gprc_list.html: ニデック戻り一覧（2回目加工）画面
	- nidec_shipping_create.html: 最終出荷作成（ニデック加工完了）画面
	- nidec_proc_create.html: ニデック加工データ登録画面

◆ 集計・検索画面
	- processing_matrix.html: 加工状況マトリックス画面
	- final_shipping_search.html: 最終出荷データ検索画面

【4.2 画面レイアウト共通仕様】
```
├── 共通ヘッダー（ナビゲーション）
├── サイドメニュー
└── メインコンテンツエリア
    ├── ページタイトル
    ├── 検索条件（該当画面のみ）
    ├── 操作ボタン
    └── データ一覧テーブル
```

■ 5. 機能詳細設計
====================================================================
【5.1 コンベックス加工依頼管理機能】

◆ 依頼登録機能（create_gprr）
	- 入力項目: 規格、色、依頼日、数量
	- バリデーション: 必須項目チェック、数値・日付形式チェック
	- 処理: GPRR_DATテーブルへの新規登録
	- エラーハンドリング: 重複チェック、データベースエラー処理

◆ 依頼一覧表示機能（gprr_list）
	- 検索条件: 規格、色、依頼日範囲、残数フラグ
	- 表示項目: 依頼ID、規格、色、依頼日、数量、加工残数
	- 集計: dbo.Get_GRD_PRC_ZAN_Qty()関数による残数計算
	- 並び順: 依頼ID降順

◆ 依頼編集機能（edit_gprr）
	- 対象: 既存の依頼データ
	- 制限: 加工データが存在する場合は編集不可
	- 処理: GPRR_DATテーブルの更新

◆ 依頼削除機能（delete_gprr）
	- 制限: 加工データが存在する場合は削除不可
	- 処理: GPRR_DATテーブルからの削除

【5.2 コンベックス加工データ管理機能】

◆ 加工データ登録機能（create_gprc）
	- 入力項目: 戻り日、戻り数量、戻り不良数、検品不良数、合格数
	- バリデーション: 数量整合性チェック、残数チェック
	- 処理: GPRC_DATテーブルへの新規登録
	- 特殊処理: ニデック加工時は出荷IDと合格数を設定

◆ 加工データ一覧表示機能（gprc_list）
	- 検索条件: 規格、色、戻り日範囲、在庫状況
	- 表示項目: 加工ID、規格、色、戻り日、戻り数、合格数、在庫数
	- 集計: 合格数による在庫数計算
	- 並び順: 戻り日降順

◆ 加工データ編集・削除機能
	- 制限: 出荷データが存在する場合は編集・削除不可
	- 処理: GPRC_DATテーブルの更新・削除

【5.3 ニデック加工依頼管理機能】

◆ ニデック加工依頼作成機能（shipping_create）
	- 入力項目: 手配日、依頼日、依頼数量
	- バリデーション: 依頼可能数チェック、数量整合性チェック
	- 処理: GSHK_DATテーブルへの新規登録（GSHK_TO=2）
	- 特殊処理: バッチ処理による複数依頼データ作成

◆ ニデック加工依頼一覧表示機能（gshk_list）
	- 検索条件: 出庫日範囲、フラグ
	- 表示項目: 出庫ID、規格、色、出庫日、手配日、数量、残数
	- 並び順: 出庫日降順

◆ ニデック加工依頼編集・削除機能
	- 制限: ニデック加工データが存在する場合は編集・削除不可
	- 処理: GSHK_DATテーブルの更新・削除

【5.4 ニデック加工データ管理機能】

◆ ニデック加工データ一覧表示機能（nidec_gprc_list）
	- 検索条件: 規格、色、戻り日範囲、在庫状況
	- 表示項目: 加工ID、規格、色、戻り日、戻り数、合格数、出荷可能数
	- 集計: 合格数 - 既出荷数 = 出荷可能数
	- 並び順: 戻り日降順

◆ 最終出荷作成機能（nidec_shipping_create）
	- 入力項目: 手配日、出荷日、出荷数量
	- バリデーション: 出荷可能数チェック
	- 処理: GSHK_DATテーブルへの新規登録（GSHK_TO=3）
	- 特殊処理: ニデック加工専用の出荷可能数計算

◆ ニデック加工データ登録機能（nidec_proc_create）
	- 入力項目: 戻り日、戻り数量、戻り不良数、検品不良数、合格数
	- バリデーション: 数量整合性チェック、出荷数量チェック
	- 処理: GPRC_DATテーブルへの新規登録（REQ_TO=2）
	- 特殊処理: 出荷データとの紐付け

【5.5 集計・検索機能】

◆ 加工状況マトリックス表示機能（processing_matrix）
	- 集計項目: 依頼数、未戻り数、在庫数
	- 分類: 規格・色別、加工種別（1回目・2回目）
	- 表示形式: マトリックス形式
	- 更新: リアルタイム反映

◆ 最終出荷データ検索機能（final_shipping_search）
	- 検索条件: 出荷日範囲、フラグ
	- 表示項目: 出荷ID、出荷日、規格、色、数量、出荷先
	- 集計: 最終出荷状況の把握
	- 並び順: 出荷日降順

■ 6. 業務ルール
====================================================================
【6.1 データ整合性ルール】

◆ 数量整合性
	- 戻り数量 = 戻り不良数 + 検品不良数 + 合格数
	- 依頼数量 ≤ 依頼可能数
	- 出荷数量 ≤ 出荷可能数
	- 加工残数 = 依頼数量 - 戻り数量合計

◆ データ依存関係
	- 加工データは依頼データに依存
	- ニデック加工依頼データは加工データに依存
	- ニデック加工データはニデック加工依頼データに依存

◆ 削除制限
	- 加工データが存在する依頼データは削除不可
	- ニデック加工データが存在するニデック加工依頼データは削除不可

【6.2 加工フロー制御】

◆ 1回目加工フロー
	1. コンベックス加工依頼登録
	2. コンベックス加工データ管理
	3. ニデック加工依頼作成
	4. 2回目加工（ニデック）へ移行

◆ 2回目加工フロー
	1. ニデック加工依頼データ確認
	2. ニデック加工データ登録
	3. 最終出荷データ作成
	4. 加工完了

【6.3 在庫管理ルール】

◆ 在庫数計算
	- 1回目加工在庫数 = 合格数 - ニデック加工依頼数
	- 2回目加工在庫数 = 合格数 - 最終出荷数
	- 依頼可能数 = 在庫数
	- 出荷可能数 = 在庫数

◆ 在庫状況表示
	- 在庫あり: 在庫数 > 0
	- 在庫なし: 在庫数 = 0
	- 過剰在庫: 在庫数 > 基準値

■ 7. エラーハンドリング
====================================================================
【7.1 データベースエラー】
	- 接続エラー: システムエラー表示
	- 整合性エラー: バリデーションエラー表示
	- 重複エラー: 重複データエラー表示

【7.2 バリデーションエラー】
	- 必須項目未入力: エラーメッセージ表示
	- 数値形式エラー: 形式エラーメッセージ表示
	- 日付形式エラー: 形式エラーメッセージ表示
	- 数量整合性エラー: 整合性エラーメッセージ表示

【7.3 業務ルールエラー】
	- 削除制限エラー: 制限エラーメッセージ表示
	- 数量超過エラー: 超過エラーメッセージ表示
	- データ不存在エラー: 不存在エラーメッセージ表示

【7.4 ログ出力】
	- エラー詳細情報の自動ログ記録
	- 操作履歴の記録
	- デバッグ情報の出力

■ 8. 関連ファイル・関数
====================================================================
【8.1 主要ファイル】

◆ モデルクラス
	- ファイル: app/gradation.py
	- クラス: Gradation
	- 機能: グラデーション関連のデータ操作
	- 主要メソッド:
		- create_gprr(): 依頼データ作成
		- get_gprr_list(): 依頼一覧取得
		- create_gprc(): 加工データ作成
		- get_gprc_list(): 加工一覧取得
		- create_shipping_batch(): ニデック加工依頼作成
		- get_gshk_list(): ニデック加工依頼一覧取得

◆ ルーティング
	- ファイル: app/routes_gradation.py
	- 機能: グラデーション関連の画面制御
	- 主要ルート:
		- /gradation/gprr_create: コンベックス加工依頼作成画面
		- /gradation/gprr_list: コンベックス依頼一覧画面
		- /gradation/gprr_edit: コンベックス加工依頼編集画面
		- /gradation/gprc_create_from_gprr: コンベックス加工データ登録画面
		- /gradation/gprc_list: コンベックス戻り一覧画面
		- /gradation/shipping_create: ニデック加工依頼作成画面
		- /gradation/gshk_list: ニデック依頼一覧画面
		- /gradation/gshk_edit: ニデック加工依頼編集画面
		- /gradation/nidec_gprc_list: ニデック戻り一覧（2回目加工）画面
		- /gradation/nidec_shipping_create: 最終出荷作成（ニデック加工完了）画面
		- /gradation/nidec_proc_create: ニデック加工データ登録画面
		- /gradation/processing_matrix: 加工状況マトリックス画面
		- /gradation/final_shipping_search: 最終出荷データ検索画面

◆ テンプレート
	- ディレクトリ: app/templates/gradation/
	- 主要ファイル:
		- gprr_create.html: コンベックス加工依頼作成画面
		- gprr_list.html: コンベックス依頼一覧画面
		- gprr_edit.html: コンベックス加工依頼編集画面
		- gprc_create_from_gprr.html: コンベックス加工データ登録画面
		- gprc_list.html: コンベックス戻り一覧画面
		- shipping_create.html: ニデック加工依頼作成画面
		- gshk_list.html: ニデック依頼一覧画面
		- gshk_edit.html: ニデック加工依頼編集画面
		- nidec_gprc_list.html: ニデック戻り一覧（2回目加工）画面
		- nidec_shipping_create.html: 最終出荷作成（ニデック加工完了）画面
		- nidec_proc_create.html: ニデック加工データ登録画面
		- processing_matrix.html: 加工状況マトリックス画面
		- final_shipping_search.html: 最終出荷データ検索画面

【8.2 データベース関数】

◆ 残数計算関数
	- 関数: dbo.Get_GRD_PRC_ZAN_Qty()
	- 機能: コンベックス加工残数計算
	- 呼び出し元: get_gprr_list()

◆ 出荷残数計算関数
	- 関数: dbo.Get_GRD_SHK_ZAN_Qty()
	- 機能: コンベックス出荷残数計算
	- 呼び出し元: get_gprc_list()

◆ 差分計算関数
	- 関数: dbo.Get_GSHK_GPRC_Diff()
	- 機能: 出荷・加工差分計算
	- 呼び出し元: get_gshk_diff_qty()

【8.3 関連画面・機能】
	- トップページ: システム全体のダッシュボード
	- 受注データ管理: 受注データの入力・検索
	- 在庫管理: 在庫数量の管理・確認
	- 出荷管理: 通常出荷データの管理

■ 9. セキュリティ
====================================================================
【9.1 認証・認可】
	- ログイン認証必須（@login_required）
	- セッション管理による認証状態維持
	- 権限による機能制限（将来拡張予定）

【9.2 データ保護】
	- SQLインジェクション対策（パラメータ化クエリ）
	- XSS対策（エスケープ処理）
	- CSRF対策（トークン検証）

【9.3 ログ管理】
	- 操作ログの記録
	- エラーログの記録
	- セキュリティログの記録

■ 10. パフォーマンス
====================================================================
【10.1 データベース最適化】
	- インデックスの適切な設定
	- クエリの最適化
	- 接続プールの活用

【10.2 画面表示最適化】
	- ページネーション機能
	- 検索条件による絞り込み
	- 非同期処理の活用

【10.3 キャッシュ戦略】
	- 静的データのキャッシュ
	- セッション情報のキャッシュ
	- クエリ結果のキャッシュ（将来拡張予定）

■ 11. 運用・保守
====================================================================
【11.1 バックアップ】
	- データベースの定期バックアップ
	- ログファイルの定期バックアップ
	- 設定ファイルのバックアップ

【11.2 監視】
	- システム稼働状況の監視
	- データベース接続状況の監視
	- エラーログの監視

【11.3 メンテナンス】
	- 定期的なデータクリーンアップ
	- インデックスの再構築
	- ログファイルのローテーション

■ 12. 将来拡張予定
====================================================================
【12.1 機能拡張】
	- バッチ処理機能の追加
	- レポート機能の強化
	- モバイル対応

【12.2 技術拡張】
	- API機能の追加
	- リアルタイム通知機能
	- データ分析機能

【12.3 運用拡張】
	- 自動バックアップ機能
	- 監視機能の強化
	- 障害復旧機能の強化 