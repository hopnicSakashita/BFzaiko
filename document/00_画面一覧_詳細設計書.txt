====================================================================
在庫管理システム - 画面一覧 詳細設計書
====================================================================

■ 1. システム概要

【システム名】: 在庫管理システム（BF Stock Management System）
【開発言語】: Python (Flask)
【データベース】: SQL Server
【フロントエンド】: HTML5, CSS3 (Bootstrap 5), JavaScript
【認証方式】: セッションベース認証

■ 2. 画面構成一覧

【2.1 認証・基本画面】
┌─────────────────────────────────────┐
│ 01. ログイン画面 (login.html)                       │
│     URL: /auth/login                               │
│     機能: システム認証、セッション管理               │
│     作成済み: 01_ログイン画面_詳細設計書.txt       │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 02. トップページ (index.html)                      │
│     URL: /                                         │
│     機能: ダッシュボード、受注残サマリ表示          │
│     作成済み: 02_トップページ_詳細設計書.txt       │
└─────────────────────────────────────┘

【2.2 受注・注文管理】
┌─────────────────────────────────────┐
│ 03. 受注データ入力 (order_input.html)              │
│     URL: /order_input                              │
│     機能: 受注データの新規登録・更新               │
│     作成済み: 03_受注データ入力_詳細設計書.txt     │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 06. 受注データ検索 (order_search.html)            │
│     URL: /order_search                             │
│     機能: 受注データの検索・一覧表示               │
│     作成済み: 06_受注データ検索_詳細設計書.txt     │
└─────────────────────────────────────┘

【2.3 在庫管理】
┌─────────────────────────────────────┐
│ 04. ノンコート在庫検索 (noncoat_stock_search.html) │
│     URL: /noncoat-stock                            │
│     機能: ノンコート在庫の検索・表示               │
│     作成済み: 04_ノンコート在庫検索_詳細設計書.txt │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 08. ハードコート在庫検索 (hardcoat_stock_search.html)│
│     URL: /hardcoat_stock                           │
│     機能: ハードコート在庫の検索・表示             │
│     作成済み: 08_ハードコート在庫検索_詳細設計書.txt│
└─────────────────────────────────────┘

【2.4 出荷管理】
┌─────────────────────────────────────┐
│ 05. 出荷一覧 (shipment_list.html)                 │
│     URL: /shipments                                │
│     機能: 出荷データ検索・PDF/CSV出力・削除        │
│     作成済み: 05_出荷一覧_詳細設計書.txt           │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 07. 出荷作成（ノンコート） (shipping_create.html) │
│     URL: /shipping/create/<stock_id>               │
│     機能: ノンコート在庫からの出荷データ作成       │
│     作成済み: 07_出荷作成（ノンコート）_詳細設計書.txt│
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 12. 出荷作成（ハードコート） (shipping/create_hard.html)│
│     URL: /shipping/create_hard/<stock_id>          │
│     機能: ハードコート在庫からの出荷データ作成     │
│     作成済み: 12_出荷作成（ハードコート）_詳細設計書.txt│
└─────────────────────────────────────┘

【2.5 製造・加工管理】
┌─────────────────────────────────────┐
│ 09. 加工指示書 (proc_order.html)                  │
│     URL: /proc_order                               │
│     機能: 加工指示書の管理・表示・Excel出力        │
│     作成済み: 09_加工指示書_詳細設計書.txt         │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 13. 製造明細一覧 (bprd_mei_list.html)             │
│     URL: /bprd_mei/list                            │
│     機能: 製造明細の一覧表示・管理                 │
│     作成済み: 13_製造明細一覧_詳細設計書.txt       │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 14. 製造明細登録 (bprd_mei_create.html)           │
│     URL: /bprd_mei/create                          │
│     機能: 新規製造明細の登録                       │
│     作成済み: 14_製造明細登録_詳細設計書.txt       │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 15. 製造明細編集 (bprd_mei_edit.html)             │
│     URL: /bprd_mei/<id>/edit                       │
│     機能: 既存製造明細の編集・更新                 │
│     作成済み: 15_製造明細編集_詳細設計書.txt       │
└─────────────────────────────────────┘

【2.6 データ取込・出力】
┌─────────────────────────────────────┐
│ 10. CSVデータ取込 (import_csv.html)               │
│     URL: /prd_dat/import_csv                       │
│     機能: CSVファイルからのデータ取込              │
│     作成済み: 10_CSVデータ取込_詳細設計書.txt      │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 11. ハードコートExcel読込 (hardcoat_read_excel.html)│
│     URL: /hardcoat_read_excel                      │
│     機能: Excelファイルからのハードコートデータ取込│
│     作成済み: 11_ハードコートExcel読込_詳細設計書.txt│
└─────────────────────────────────────┘

【2.7 共通機能・テンプレート】
┌─────────────────────────────────────┐
│ 16. 共通テンプレート (base.html)                  │
│     種別: HTMLテンプレート                         │
│     機能: 全画面共通ベーステンプレート             │
│     作成済み: 16_共通テンプレート_詳細設計書.txt   │
└─────────────────────────────────────┘

【2.8 システム管理・ユーティリティ】
┌─────────────────────────────────────┐
│ 17. 受注残数量計算関数 (Get_ODR_ZAN_Qty_BF)       │
│     種別: SQL Server関数                           │
│     機能: 受注残数量の動的計算                     │
│     作成済み: 17_受注残数量計算関数_詳細設計書.txt │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 18. 在庫数量計算関数 (Get_Zaiko_Qty_BF)           │
│     種別: SQL Server関数                           │
│     機能: 在庫数量の動的計算                       │
│     作成済み: 18_在庫数量計算関数_詳細設計書.txt   │
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 19. 環境変数設定ファイル (.env)                    │
│     種別: 設定ファイル                             │
│     機能: データベース接続・Flask設定               │
│     作成済み: 19_環境変数設定ファイル_詳細設計書.txt│
└─────────────────────────────────────┘

┌─────────────────────────────────────┐
│ 20. ユーザー作成スクリプト (create_user.py)       │
│     種別: Pythonスクリプト                         │
│     機能: 管理者ユーザーの作成・更新               │
│     作成済み: 20_ユーザー作成スクリプト_詳細設計書.txt│
└─────────────────────────────────────┘

■ 3. 共通コンポーネント

【3.1 ベーステンプレート】
ファイル: app/templates/base.html
機能: 
- 共通ヘッダー・アコーディオンサイドメニュー
- Bootstrap 5.0.2 + jQuery 3.6.0
- フラッシュメッセージ表示・統一アラート機能
- 認証状態表示・ユーザー名表示
- レスポンシブナビゲーション

【3.2 認証システム】
ファイル: app/auth.py, app/auth_routes.py
機能:
- login_required デコレータ (app/auth.py)
- ユーザー認証機能 (verify_user)
- ログイン・ログアウト処理 (app/auth_routes.py)
- セッション管理

【3.3 データベース接続】
ファイル: app/database.py, app/models.py
機能:
- SQL Server接続管理
- SQLAlchemy セッション管理
- Raw SQLクエリ実行
- 接続プール管理

■ 4. 主要モデル一覧

【4.1 受注関連】
- BrcpDat: 受注データ処理・検索機能
- BrcpDatModel: 受注データORM

【4.2 在庫関連】
- BprdDat: 製造データ（在庫）処理
- BprdDatModel: 製造データORM
- PrdDat: 在庫計算・引当機能

【4.3 出荷関連】
- Shipment: 出荷データ処理・検索・作成機能（app/shipment.py）
- BshkDatModel: 出荷データORM（app/models.py）

【4.4 マスタ関連】
- BfspMst: 製品マスタ処理
- BztrMst: 取引先マスタ処理
- BfspMstModel: 製品マスタORM
- BztrMstModel: 取引先マスタORM

■ 5. 主要API一覧

【5.1 受注関連API】
- POST /api/orders/search: 受注データ検索
- POST /api/orders/save: 受注データ保存

【5.2 出荷関連API】
- DELETE /shipment/<id>: 出荷データ削除
- GET /shipment_pdf: 出荷PDF出力
- GET /shipment_csv: 出荷CSV出力
- POST /shipping/save/<stock_id>: ノンコート出荷作成処理
- POST /shipping/save_hard/<stock_id>: ハードコート出荷作成
- GET /proc_order_export_excel: 加工指示書Excel出力

【5.3 データ取込API】
- POST /prd_dat/import_csv: CSVデータ取込処理
- POST /hardcoat_read_excel/import: Excel読込処理

【5.4 認証関連API】
- POST /auth/login: ログイン処理
- GET /auth/logout: ログアウト処理

【5.5 製造明細API】
- POST /bprd_mei/<id>/update: 製造明細更新

■ 6. データベーステーブル構成

【6.1 トランザクションテーブル】
- BRCP_DAT: 受注データ（メインテーブル）
- BPRD_DAT: 製造データ（在庫データ）
- BSHK_DAT: 出荷データ
- BPRD_MEI: 製造明細

【6.2 マスタテーブル】
- BFSP_MST: BF規格マスタ（製品仕様）
- BZTR_MST: 取引先マスタ
- USER_MST: ユーザーマスタ（認証情報）

【6.3 データベース関数】
- dbo.Get_Zaiko_Qty_BF(): 在庫数量計算関数
- dbo.Get_ODR_ZAN_Qty_BF(): 受注残数量計算関数

■ 7. セキュリティ実装

【7.1 認証・認可】
- セッションベース認証（USER_MSTテーブルベース）
- 全画面 @login_required 必須
- パスワードハッシュ化（werkzeug.security）
- XSS対策（Jinja2自動エスケープ）

【7.2 データ保護】
- SQLインジェクション対策（パラメータ化クエリ）
- 論理削除によるデータ保護（FLGカラム）
- セッション暗号化（SECRET_KEY）
- HttpOnlyクッキー設定

■ 8. エラーハンドリング戦略

【8.1 統一エラー表示】
- flashメッセージによる統一表示
- エラーカテゴリ: error, warning, info, success
- 多言語対応（日本語メッセージ）

【8.2 ログ機能】
- エラーログの統一出力（app.logger）
- デバッグ情報の適切な制御
- ユーザーアクション追跡

【8.3 例外処理パターン】
- DatabaseConnectionError: データベース接続エラー
- ValidationError: 入力値検証エラー
- AuthenticationError: 認証エラー
- BusinessLogicError: 業務ロジックエラー

■ 9. パフォーマンス考慮事項

【9.1 データベース最適化】
- 適切なインデックス設計
- 効率的なJOINクエリ構築
- 接続プールの活用
- ページネーション実装

【9.2 フロントエンド最適化】
- 非同期処理（Ajax）の活用
- 適切なローディング表示
- Bootstrap 5.0.2 + jQuery 3.6.0
- レスポンシブデザイン対応

■ 10. 開発・運用指針

【10.1 コーディング規約】
- Pythonコーディング規約（PEP 8）準拠
- HTMLテンプレート統一（8セクション構成）
- JavaScript ES6+ 使用
- SQL Server T-SQL準拠

【10.2 テスト戦略】
- 各画面の正常系・異常系テスト
- データベーストランザクションテスト
- セキュリティテスト
- API エンドポイントテスト

【10.3 バージョン管理】
- Git による版数管理
- 機能単位でのコミット
- 詳細設計書の標準化

■ 11. 詳細設計書構成

【11.1 8セクション標準構成】
　1. 画面概要 - 画面名、ファイル構成、アクセス情報、画面目的
　2. 機能概要 - 主要機能、業務フロー、対象データ
　3. 画面レイアウト - 画面構造、フォーム構成、テーブル構成
　4. データ項目 - 入力項目、出力項目、詳細仕様
　5. データ処理 - 処理フロー、SQLクエリ、データ変換
　6. 実装方法 - 技術スタック、ルーティング、モデル実装
　7. エラー処理 - エラー分類、ハンドリング実装
　8. 関連ファイル - アプリケーション、データベース、関連画面

【11.2 作成済み設計書一覧（全20機能完成）】
　- 01_ログイン画面_詳細設計書.txt
　- 02_トップページ_詳細設計書.txt
　- 03_受注データ入力_詳細設計書.txt
　- 04_ノンコート在庫検索_詳細設計書.txt
　- 05_出荷一覧_詳細設計書.txt
　- 06_受注データ検索_詳細設計書.txt
　- 07_出荷作成（ノンコート）_詳細設計書.txt
　- 08_ハードコート在庫検索_詳細設計書.txt
　- 09_加工指示書_詳細設計書.txt
　- 10_CSVデータ取込_詳細設計書.txt
　- 11_ハードコートExcel読込_詳細設計書.txt
　- 12_出荷作成（ハードコート）_詳細設計書.txt
　- 13_製造明細一覧_詳細設計書.txt
　- 14_製造明細登録_詳細設計書.txt
　- 15_製造明細編集_詳細設計書.txt
　- 16_共通テンプレート_詳細設計書.txt
　- 17_受注残数量計算関数_詳細設計書.txt
　- 18_在庫数量計算関数_詳細設計書.txt
　- 19_環境変数設定ファイル_詳細設計書.txt
　- 20_ユーザー作成スクリプト_詳細設計書.txt

■ 12. システム完成状況

【12.1 全機能完成】
- 基本画面・認証：01-02番（2機能）
- 受注・注文管理：03, 06番（2機能）
- 在庫管理：04, 08番（2機能）
- 出荷管理：05, 07, 12番（3機能）
- 製造・加工管理：09, 13-15番（4機能）
- データ取込・出力：10-11番（2機能）
- 共通機能・テンプレート：16番（1機能）
- システム管理・ユーティリティ：17-20番（4機能）

【12.2 技術的成果】
- Flask + SQLAlchemy + Bootstrap 5の統合実装
- 8セクション構成による詳細設計書統一
- セキュリティ・エラーハンドリングの体系化
- 実装ベースの技術仕様完成

====================================================================
