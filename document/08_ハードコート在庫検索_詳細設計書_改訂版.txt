====================================================================
在庫管理システム - ハードコート在庫検索画面 詳細設計書
====================================================================

■ 1. 画面概要
====================================================================
【画面名】
　ハードコート在庫検索画面

【画面目的】
　ハードコート（加工済み）レンズの在庫検索・一覧表示を行い、
　検索条件による絞り込みと出荷作成への遷移機能を提供する。

【アクセス情報】
　- URL: /hardcoat_stock
　- 認証: 必須（ログイン必須）

■ 2. 機能概要
====================================================================
【主要機能】
　1. 検索条件による在庫データの絞り込み表示
　2. ハードコート在庫の一覧表示（在庫数・HC残表示）
　3. 各在庫からのハードコート出荷作成画面への遷移
　4. WTFormsによるフォーム管理とCSRF保護

【表示フィルタ】
　- 未出荷の有効なデータのみ対象（BPDD_FLG = DatabaseConstants.BPDD_FLG_NOT_SHIPPED）
　- ハードコート加工済みのデータのみ対象（BPDD_PROC = 1）  
　- 在庫数量が0より大きいもののみ表示
　- コート日（BPDD_CRT）が設定されているデータのみ対象

■ 3. 処理フロー
====================================================================
【3.1 画面アクセスから表示までの処理フロー】
```
1. ユーザーがハードコート在庫検索画面（/hardcoat_stock）にアクセス
　　↓
2. @login_required デコレータで認証チェック
　　↓
3. routes.py の hardcoat_stock_search() 関数が実行
　　↓
4. NoncoatStockSearchForm() フォームインスタンス作成
　　↓
5. BfspMst.get_choices() で各選択肢を動的取得
　　- form.base.choices = BfspMst.get_choices('BFSP_BASE')
　　- form.adp.choices = BfspMst.get_choices('BFSP_ADP')
　　- form.lr.choices = BfspMst.get_choices('BFSP_LR')
　　- form.clr.choices = BfspMst.get_choices('BFSP_CLR')
　　↓
6. GET方式の場合: フォーム初期表示
   POST方式の場合: フォームデータ取得・検索実行
　　↓
7. POST時: PrdDat.search_hardcoat_stock() メソッド呼び出し
　　- 検索パラメータを渡してハードコート在庫データを取得
　　↓
8. 検索結果なしの場合: flashメッセージ表示
　　↓
9. hardcoat_stock_search.html テンプレートをレンダリング
　　↓
10. HTMLをクライアントに返却
```

【3.2 検索処理の詳細フロー】
```
PrdDat.search_hardcoat_stock() 内部処理:
1. データベースセッション取得 (get_db_session())
　　↓
2. ハードコート在庫検索クエリ実行
　　- BPRD_DAT, BFSP_MST, BRCP_DAT テーブル結合
　　- dbo.Get_Zaiko_Qty_BF() で在庫数計算
　　- dbo.Get_ODR_ZAN_Qty_BF() でHC受注残計算
　　↓
3. 検索条件による動的フィルタリング
　　- 製品ID、LOT、ベース、加入度数、LR、カラー
　　↓
4. GROUP BY で集計、ORDER BY で並び順制御
　　↓
5. 検索結果を返却（例外時: log_error()でログ出力）
```

■ 4. 画面レイアウト
====================================================================
【4.1 画面構造】
```
├── 共通ヘッダー（ナビゲーション）
├── サイドメニュー
└── メインコンテンツエリア
    ├── ページタイトル「ハードコート在庫検索」
    ├── 検索フォーム
    │   ├── 製品ID（テキスト入力）
    │   ├── LOT（テキスト入力）
    │   ├── ベース（セレクトボックス）
    │   ├── 加入度数（セレクトボックス）
    │   ├── LR（セレクトボックス）
    │   ├── カラー（セレクトボックス）
    │   └── 検索ボタン
    └── 検索結果テーブル
```

【4.2 検索結果テーブル表示例】
```
┌─────────────────────────────────────────────────────────────────────────────────┐
│                           ハードコート在庫一覧                               │
├─────────┬──────┬──────┬─────────┬──────┬─────────┬─────────┬──────┬─────────┬──────┤
│ 製造ID  │ LOT  │ベース│ 加入度数 │ LR  │ カラー  │ 在庫数  │HC残 │コート日 │ 操作 │
├─────────┼──────┼──────┼─────────┼──────┼─────────┼─────────┼──────┼─────────┼──────┤
│  1001   │ 123  │  2   │   150   │  L  │   BR   │   15   │  5  │240115   │[出荷]│
│  1002   │ 124  │  4   │   200   │  R  │   SG   │    3   │  2  │240116   │[出荷]│
└─────────┴──────┴──────┴─────────┴──────┴─────────┴─────────┴──────┴─────────┴──────┘
```

■ 5. 検索条件
====================================================================
【5.1 検索条件項目】

◆ 製品ID
　- 入力方式: テキスト入力フィールド
　- 検索方式: 完全一致検索
　- 必須/任意: 任意項目（空欄可）

◆ LOT
　- 入力方式: テキスト入力フィールド
　- 検索方式: 完全一致検索
　- 必須/任意: 任意項目（空欄可）
　- 注意: 数値として管理されているが文字列入力

◆ ベース
　- 入力方式: セレクトボックス
　- 選択肢: 全て + BF規格マスタからの動的取得値（2、4、6、8等）
　- 必須/任意: 任意項目（「全て」選択可）

◆ 加入度数
　- 入力方式: セレクトボックス
　- 選択肢: 全て + BF規格マスタからの動的取得値（150、175、200、225、250、275、300等）
　- 必須/任意: 任意項目（「全て」選択可）

◆ LR
　- 入力方式: セレクトボックス
　- 選択肢: 全て、L、R
　- 必須/任意: 任意項目（「全て」選択可）

◆ カラー
　- 入力方式: セレクトボックス
　- 選択肢: 全て + BF規格マスタからの動的取得値（BR、SG等）
　- 必須/任意: 任意項目（「全て」選択可）

■ 6. 表示項目
====================================================================
【6.1 検索結果一覧表示項目】

◆ 製造ID（BPDD_ID）
　- 説明: 製造データの一意識別子
　- 用途: 出荷作成画面への遷移時に使用

◆ LOT（BPDD_LOT）
　- 説明: 製造ロット番号

◆ ベース（BFSP_BASE）
　- 説明: レンズのベースカーブ値

◆ 加入度数（BFSP_ADP）
　- 説明: レンズの度数

◆ LR（BFSP_LR）
　- 説明: 左右の目用識別（L または R）

◆ カラー（BFSP_CLR）
　- 説明: レンズの色コード（BR、SG等）

◆ 在庫数（stock_qty）
　- 説明: 現在の在庫残数
　- 計算方法: dbo.Get_Zaiko_Qty_BF関数による動的計算
　- 注意: 製造数量から出荷済み数量を差し引いた実在庫数

◆ HC残（order_remaining）
　- 説明: ハードコート受注残数量
　- 計算方法: dbo.Get_ODR_ZAN_Qty_BF関数による受注残計算
　- 対象: BRCP_PROC = DatabaseConstants.PROC_HARD_COAT（ハードコート）の受注データから集計

◆ コート日（BPDD_CRT）
　- 説明: ハードコート加工を行った日付
　- 表示形式: YYMMDD形式（例：240115 = 2024年1月15日）

◆ 操作
　- 表示: [出荷]ボタン
　- 機能: ハードコート出荷作成画面に遷移
　- 遷移先: /shipping/create_hard/<製造ID>

■ 7. 業務ロジック
====================================================================
【7.1 データ取得条件】

◆ 基本フィルタリング条件
　- ハードコート加工済みデータのみ: BPDD_PROC = 1
　- 未出荷の有効データ: BPDD_FLG = DatabaseConstants.BPDD_FLG_NOT_SHIPPED
　- 在庫数量が0より大きいもの: dbo.Get_Zaiko_Qty_BF(BPDD_ID) > 0

◆ データ結合ルール
　- 基本テーブル: BPRD_DAT（製造データ）
　- 製品情報結合: BFSP_MST（BF規格マスタ）結合条件 BPDD_PRD_ID = BFSP_PRD_ID
　- ハードコート受注残結合: BRCP_DAT（受注データ）結合条件 BPDD_PRD_ID = BRCP_PRD_ID AND BRCP_PROC = DatabaseConstants.PROC_HARD_COAT

【7.2 在庫数・受注残計算ルール】

◆ 在庫数量計算
　- 使用関数: dbo.Get_Zaiko_Qty_BF(BPDD_ID)
　- 計算内容: 製造数量 - 出荷済み数量
　- NULL処理: NULL値は0として扱う（ISNULL関数使用）

◆ ハードコート受注残計算
　- 使用関数: dbo.Get_ODR_ZAN_Qty_BF(BRCP_ID)の合計
　- 対象受注: BRCP_PROC = DatabaseConstants.PROC_HARD_COAT（ハードコート）
　- 集計方法: 製品IDごとのSUM集計
　- NULL処理: NULL値は0として扱う（ISNULL関数使用）

【7.3 表示順序ルール】
　- 第1優先: カラー（BFSP_CLR）
　- 第2優先: ベース（BFSP_BASE）
　- 第3優先: 加入度数（BFSP_ADP）
　- 第4優先: LR（BFSP_LR）
　- 第5優先: LOT（BPDD_LOT）

【7.4 選択肢動的生成】
　- ベース・加入度数・LR・カラーの選択肢はBFSP_MSTから動的取得
　- BfspMst.get_choices()メソッドにより重複なしの選択肢を生成
　- 初期値として「全て」を追加

■ 8. 関連ファイル・関数
====================================================================
【8.1 主要ファイル・関数】

◆ ルーティング
　- ファイル: app/routes.py
　- 関数: hardcoat_stock_search()
　- 機能: ハードコート在庫検索画面の表示制御
　- 認証: @login_required デコレータ

◆ データ取得モデル
　- ファイル: app/models.py
　- クラス: PrdDat
　- 関数: search_hardcoat_stock()
　- 機能: ハードコート在庫データの検索・取得
　- 呼び出し元: routes.py の hardcoat_stock_search()

◆ フォーム定義
　- ファイル: app/forms.py
　- クラス: NoncoatStockSearchForm
　- 機能: ハードコート在庫検索フォームの定義（ノンコートと共用）
　- 項目: product_id, lot, base, adp, lr, clr

◆ 選択肢取得
　- ファイル: app/models.py
　- クラス: BfspMst
　- 関数: get_choices()
　- 機能: BF規格マスタから選択肢を動的取得
　- 呼び出し元: routes.py の hardcoat_stock_search()

◆ テンプレート
　- ファイル: app/templates/hardcoat_stock_search.html
　- 機能: ハードコート在庫検索画面のHTML表示
　- 継承: base.html

◆ データベース関数
　- 関数: dbo.Get_Zaiko_Qty_BF()
　- 機能: 在庫数量計算（製造数量 - 出荷済み数量）
　- 呼び出し元: PrdDat.search_hardcoat_stock()

　- 関数: dbo.Get_ODR_ZAN_Qty_BF()
　- 機能: 受注残数量計算
　- 呼び出し元: PrdDat.search_hardcoat_stock()

◆ ログ出力
　- ファイル: app/models.py
　- 関数: log_error()
　- 機能: エラーログの出力
　- 呼び出し元: PrdDat.search_hardcoat_stock()（例外発生時）

■ 9. エラー処理
====================================================================
【9.1 業務エラー】
　- 検索結果なし: 「検索条件に一致する在庫データが見つかりませんでした。」
　- データ表示レベル: info

【9.2 システムエラー】
　- データベース接続エラー: 「ハードコート在庫検索中にエラーが発生しました」
　- データ表示レベル: error
　- エラーログ: log_error関数によるログ出力

【9.3 認証エラー】
　- ログイン認証必須
　- 未認証時: ログイン画面にリダイレクト

【9.4 CSRF保護】
　- WTFormsのCSRFトークンによる保護
　- 不正リクエスト時: 適切なエラー表示

■ 10. 関連機能
====================================================================
【10.1 関連画面】
　- ハードコート出荷作成画面: /shipping/create_hard/<製造ID>
　- ログイン画面: 認証必須のため

【10.2 関連データベーステーブル】
　- BPRD_DAT: 製造データテーブル
　- BFSP_MST: BF規格マスタテーブル
　- BRCP_DAT: 受注データテーブル

【10.3 関連データベース関数】
　- dbo.Get_Zaiko_Qty_BF(): 在庫数量計算関数
　- dbo.Get_ODR_ZAN_Qty_BF(): 受注残数量計算関数

【10.4 関連業務処理】
　- ハードコートExcel読込: ハードコート在庫データの一括登録
　- 出荷作成（ハードコート）: 当画面からの出荷作業
　- 出荷一覧: 出荷済みデータの確認

■ 11. 重要な業務制約
====================================================================
【11.1 データ制約】
　- ハードコート加工済みデータのみが対象（BPDD_PROC = 1）
　- ノンコート在庫は別画面（/noncoat-stock）で管理
　- コート日が設定されているデータのみ表示対象

【11.2 操作制約】
　- 在庫数量・受注残数量の算出は専用関数に依存
　- 検索結果の表示順序は業務上の重要度に基づく固定順序
　- 出荷作業への遷移は製造ID単位で行う

【11.3 セキュリティ制約】
　- ログイン認証必須
　- 適切なエラーハンドリングによる情報漏洩防止
　- CSRFトークンによる不正リクエスト防止

【11.4 データ整合性】
　- ステータスフラグ（BPDD_FLG）の確認は必須
　- 在庫数量が0以下の場合は表示対象外
　- 受注残数量はハードコート受注のみを対象とする
