====================================================================
在庫管理システム - トップページ（受注残一覧） 詳細設計書（改訂版）
====================================================================

■ 1. 画面概要
====================================================================
【画面名】
　トップページ（受注残一覧）

【画面目的】
　受注残数を製品・取引先・加工種別ごとに集計して一覧表示し、
　在庫管理の状況を把握できるダッシュボード機能を提供する。

【アクセス情報】
　- URL: /
　- 認証: 必須（ログイン必須）

■ 2. 業務概要
====================================================================
【主要業務】
　1. 受注残データの自動集計・表示
　2. 製品規格別（ベース・加入度数・L/R・色）での分類表示
　3. 取引先別（コロンバス・ダラス・ヤンガー）での受注残表示
　4. 加工種別（NC：ノンコート、HC：ハードコート）での分類表示

【表示条件】
　- 受注残が0より大きいもののみ表示
　- 未出荷の有効な受注データのみ対象（BRCP_FLG = DatabaseConstants.BRCP_FLG_NOT_SHIPPED）
　- 製品規格の並び順（BFSP_SORT）に基づく表示順序

【業務上の重要性】
　- システム全体の受注状況を一元把握するダッシュボード
　- 在庫管理と出荷計画の基礎となる重要な情報源
　- 取引先別・加工種別での受注残バランスの可視化

■ 3. 処理フロー
====================================================================
【3.1 メイン処理フロー】
```
1. ユーザーがトップページ（/）にアクセス
　　↓
2. @login_required デコレータで認証チェック
　　↓
3. routes.py の index() 関数実行
　　↓
4. BrcpDat.get_order_summary() メソッド呼び出し
　　↓
5. 受注残データの集計処理実行
　　↓
6. index.html テンプレートをレンダリング
　　↓
7. 受注残一覧表示
```

【3.2 受注残集計処理フロー】
```
BrcpDat.get_order_summary() 内部処理:
1. データベースセッション取得
　　↓
2. 受注残集計クエリ実行
　　- BRCP_DAT, BFSP_MST, BZTR_MST テーブル結合
　　- dbo.Get_ODR_ZAN_Qty_BF() で受注残計算
　　↓
3. 取引先別・加工種別でのSUM集計
　　↓
4. BFSP_SORT順での並び替え
　　↓
5. 集計結果を返却（例外時: log_error()でログ出力）
```

■ 4. 画面レイアウト
====================================================================
【4.1 画面構造】
```
├── 共通ヘッダー（ナビゲーション）
├── サイドメニュー
└── メインコンテンツエリア
    ├── ページタイトル「受注残一覧」
    └── 受注残データ一覧テーブル
```

【4.2 受注残一覧テーブル】
```
┌─────────────────────────────────────────────────────────────┐
│                        受注残一覧                           │
├──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┤
│製品ID│ベース│加入度数│ L/R │ 色  │ｺﾛﾝﾊﾞｽ│ ダラス │ｺﾛﾝﾊﾞｽ│ ダラス │ヤンガー│
│      │      │      │     │     │NC残 │NC残  │HC残 │HC残  │HC残 │
├──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ 1001 │  2   │ 150  │  L  │ BR  │  50 │  30  │  20 │  10  │  5  │
│ 1002 │  4   │ 200  │  R  │ SG  │   0 │  15  │  30 │   5  │  0  │
│ 1003 │  6   │ 225  │  L  │ BR  │  25 │   0  │   0 │  20  │ 10  │
└──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┘
```

■ 5. データ項目
====================================================================
【5.1 表示項目】

◆ 製品ID
　- 表示形式: 4桁の製品識別コード
　- 説明: BF規格マスタの製品識別子

◆ ベース
　- 表示形式: 数値（2、4、6、8）
　- 説明: レンズのベースカーブ

◆ 加入度数
　- 表示形式: 数値（150、175、200、225、250、275、300）
　- 説明: 遠近両用レンズの加入度数

◆ L/R
　- 表示形式: L または R
　- 説明: 左右識別（L：左、R：右）

◆ 色
　- 表示形式: 色コード（BR、SG）
　- 説明: レンズの色コード

◆ コロンバスNC残
　- 表示形式: 数値
　- 説明: コロンバス向けノンコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_COLUMBUS, BRCP_PROC=0

◆ ダラスNC残
　- 表示形式: 数値
　- 説明: ダラス向けノンコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_DALLAS, BRCP_PROC=0

◆ コロンバスHC残
　- 表示形式: 数値
　- 説明: コロンバス向けハードコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_COLUMBUS, BRCP_PROC=1

◆ ダラスHC残
　- 表示形式: 数値
　- 説明: ダラス向けハードコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_DALLAS, BRCP_PROC=1

◆ ヤンガーHC残
　- 表示形式: 数値
　- 説明: ヤンガー向けハードコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_YOUNGER, BRCP_PROC=1

◆ ヤンガーEU_HC残
　- 表示形式: 数値
　- 説明: ヤンガーヨーロッパ向けハードコート受注残数量
　- 集計条件: BRCP_ORDER_CMP=DatabaseConstants.ORDER_CMP_YOUNGER_EU, BRCP_PROC=1

■ 6. 業務ルール
====================================================================
【6.1 受注残集計ルール】

◆ 集計対象条件
　- 有効な受注データのみ集計（BRCP_FLG = DatabaseConstants.BRCP_FLG_NOT_SHIPPED）
　- 受注残数量が0より大きいデータのみ集計対象
　- `dbo.Get_ODR_ZAN_Qty_BF`関数による正確な受注残数量計算

◆ 取引先別集計
　- BRCP_ORDER_CMP = DatabaseConstants.ORDER_CMP_COLUMBUS: コロンバス
　- BRCP_ORDER_CMP = DatabaseConstants.ORDER_CMP_DALLAS: ダラス  
　- BRCP_ORDER_CMP = DatabaseConstants.ORDER_CMP_YOUNGER: ヤンガー
　- BRCP_ORDER_CMP = DatabaseConstants.ORDER_CMP_YOUNGER_EU: ヤンガーヨーロッパ

◆ 加工種別集計
　- BRCP_PROC = DatabaseConstants.PROC_NON_COAT: ノンコート（NC）
　- BRCP_PROC = DatabaseConstants.PROC_HARD_COAT: ハードコート（HC）

【6.2 表示制御ルール】

◆ 表示フィルタリング
　- 全ての受注残（NC/HC）が0の製品は表示しない
　- 製品規格マスタに存在する全製品を基準として集計
　- 受注データが存在しない製品も対象（0表示）

◆ 並び順制御
　- BFSP_SORT（製品規格マスタの並び順）に基づく表示順序
　- 色 → ベース → 加入度数 → L/R の優先順位

【6.3 データ更新タイミング】

◆ リアルタイム反映
　- 受注データ入力・更新時の即座反映
　- 出荷データ作成時の受注残数量自動更新
　- 受注データ削除時の集計値再計算

◆ 受注残計算
　- 受注数量 - 出荷済み数量 = 受注残数量
　- `dbo.Get_ODR_ZAN_Qty_BF`関数による正確な残数計算
　- 出荷完了時の受注残0表示

■ 7. エラーハンドリング
====================================================================
【7.1 データ取得エラー】
　- 受注残サマリー取得失敗: エラーログ記録とHTTP 500エラー
　- データベース接続エラー: システムエラー表示

【7.2 表示エラー】
　- 認証エラー: ログイン画面へのリダイレクト
　- 画面表示エラー: エラーメッセージとエラー情報の表示

【7.3 ログ出力】
　- エラー詳細情報の自動ログ記録
　- "受注残サマリー取得中にエラーが発生しました"のメッセージ

■ 8. 関連ファイル・関数
====================================================================
【8.1 主要ファイル・関数】

◆ ルーティング
　- ファイル: app/routes.py
　- 関数: index()
　- 機能: トップページの表示制御
　- 認証: @login_required デコレータ

◆ データ取得モデル
　- ファイル: app/models.py
　- クラス: BrcpDat
　- 関数: get_order_summary()
　- 機能: 受注残サマリーデータの集計・取得
　- 呼び出し元: routes.py の index()

◆ テンプレート
　- ファイル: app/templates/index.html
　- 機能: トップページのHTML表示
　- 継承: base.html

◆ データベース関数
　- 関数: dbo.Get_ODR_ZAN_Qty_BF()
　- 機能: 受注残数量計算関数
　- 呼び出し元: BrcpDat.get_order_summary()

◆ エラーログ
　- ファイル: app/models.py
　- 関数: log_error()
　- 機能: エラーログ記録機能

【8.2 データベーステーブル】

◆ BRCP_DAT（受注データテーブル）
　- 主要項目: BRCP_PRD_ID, BRCP_ORDER_CMP, BRCP_PROC, BRCP_QTY, BRCP_FLG
　- 業務用途: 受注残集計の基準データ

◆ BFSP_MST（BF規格マスタテーブル）
　- 主要項目: BFSP_PRD_ID, BFSP_BASE, BFSP_ADP, BFSP_LR, BFSP_CLR, BFSP_SORT
　- 業務用途: 製品情報と表示順序

◆ BZTR_MST（取引先マスタテーブル）
　- 主要項目: BZTR_ID, BZTR_NM
　- 業務用途: 取引先情報

【8.3 関連画面・機能】
　- 受注データ入力画面: 受注データの新規作成・更新
　- 受注データ検索画面: 受注データの詳細検索・確認
　- 出荷作成画面: 受注データに基づく出荷データ作成
　- ダッシュボード機能による受注状況の全体把握
